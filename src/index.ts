import { app, BrowserWindow, screen, globalShortcut} from 'electron';
// This allows TypeScript to pick up the magic constants that's auto-generated by Forge's Webpack
// plugin that tells the Electron app where to look for the Webpack-bundled app code (depending on
// whether you're running in development or production).
declare const MAIN_WINDOW_WEBPACK_ENTRY: string;
declare const MAIN_WINDOW_PRELOAD_WEBPACK_ENTRY: string;

// Handle creating/removing shortcuts on Windows when installing/uninstalling.
if (require('electron-squirrel-startup')) {
  app.quit();
}

const createWindow = (): void => {
  // Create the browser window.
  
  let overlayVisible = true;

  const { width, height } = screen.getPrimaryDisplay().workAreaSize;

  const mainWindow = new BrowserWindow({
    height: height,
    width: width,
    frame: false,
    autoHideMenuBar: true,
    transparent: true,
    alwaysOnTop: true,
    icon: '../appicons/icon.png',
    // enableLargerThanScreen: true,
    skipTaskbar: true,
    opacity: 0.5,
    webPreferences: {
      preload: MAIN_WINDOW_PRELOAD_WEBPACK_ENTRY,
    },
  });

  // and load the index.html of the app.
  mainWindow.loadURL(MAIN_WINDOW_WEBPACK_ENTRY);

  // Let the user click through the overlay
  mainWindow.setIgnoreMouseEvents(true, { forward: true})


  mainWindow.setVisibleOnAllWorkspaces(true, { visibleOnFullScreen: true });
  mainWindow.setAlwaysOnTop(true, 'screen-saver', 1);

    // Register shortcuts to dim and brighten the overlay
    globalShortcut.register('CommandOrControl+Up', () => {
      if (mainWindow) {
        const currentOpacity = mainWindow.getOpacity();
        mainWindow.setOpacity(Math.min(currentOpacity + 0.1, 1));
      }
    });
  
    globalShortcut.register('CommandOrControl+Down', () => {
      if (mainWindow) {
        const currentOpacity = mainWindow.getOpacity();
        mainWindow.setOpacity(Math.max(currentOpacity - 0.1, 0.1));
      }
    });
    // Register shortcut to hide/show the overlay
    globalShortcut.register('CommandOrControl+H', () => {
      if (mainWindow) {
        overlayVisible = !overlayVisible;
        if (overlayVisible) {
          mainWindow.show();
        } else {
          mainWindow.hide();
        }
      }
    });
    globalShortcut.register('CommandOrControl+Shift+Q', () => {
      app.quit();
    });
};

// This method will be called when Electron has finished
// initialization and is ready to create browser windows.
// Some APIs can only be used after this event occurs.
app.on('ready', createWindow);

// Quit when all windows are closed, except on macOS. There, it's common
// for applications and their menu bar to stay active until the user quits
// explicitly with Cmd + Q.
app.on('window-all-closed', () => {
  if (process.platform !== 'darwin') {
    app.quit();
  }
});

app.on('activate', () => {
  // On OS X it's common to re-create a window in the app when the
  // dock icon is clicked and there are no other windows open.
  if (BrowserWindow.getAllWindows().length === 0) {
    createWindow();
  }
});

// In this file you can include the rest of your app's specific main process
// code. You can also put them in separate files and import them here.
